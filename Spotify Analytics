# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First I determined the avg popularity, duration, and tempo by artist and track name.
SELECT artist_name as Artist
,track_name as Song
,avg(popularity)
,avg(duration_ms)
,avg(tempo) 
FROM BIT_DB.Spotifydata
GROUP BY Artist, Song;

#Then I reduced the amount of decimals in the tempo column to aid in data visualization.
SELECT artist_name as Artist
,track_name as Song
,avg(popularity)
,avg(duration_ms)
,ROUND (tempo, 0) as Tempo 
FROM BIT_DB.Spotifydata
GROUP BY Artist, Song;

#Next I determined the Top 5 artiists whose songs had the longest duration.
SELECT artist_name as Artist
,track_name as Song
,duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc
LIMIT 5;

#Then I determined the Top 5 artists whose songs had the best danceability.
SELECT artist_name as Artist
,track_name as Song
,danceability
FROM BIT_DB.Spotifydata
ORDER BY danceability desc
LIMIT 5;

--Below is an example of a CTE I created for the database above.--
#Calculate the avg popularity for the artists in the Spotify data table. Then, for every artist with an avg popularity of 90 or above, show their name, 
their avg popularity, and label them as a "Top Star".
WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s
GROUP BY s.artist_name
)

SELECT artist_name
,average_popularity
,'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;
